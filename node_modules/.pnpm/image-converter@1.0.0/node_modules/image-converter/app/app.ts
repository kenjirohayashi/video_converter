import doc = require('./document.manager');
//import clipboard = require('clipboard');

var manager = new doc.DocumentManager(new DOMParser(), new XMLSerializer());
var svgContainerId = "svg-container";

function convert() {
    console.log("Start Convert");
    manager.convertToPngData(function (data) {
        var body = document.querySelector('body');

        var text = document.createElement("p");
        text.id = "final-data";
        text.innerHTML = data;
        body.appendChild(text);

        var img = new Image;
        img.src = data;
        body.appendChild(img);
    });
}


function clearSvg() {

    var container = document.getElementById('svg-container');
    var svg = document.querySelector("#svg-container svg");
    if (svg) {
        container.removeChild(svg)
    }

}

function loadFile(file) {
    var reader = new FileReader();
    reader.onload = (function (e) {
        console.log(file.name);
        if (file.name.endsWith(".css")) {
            loadStyleFromFile(file);
        } else if (file.name.endsWith(".svg")) {
            loadImageFromFile(file);
        }
    });
    reader.readAsText(file);
}

function loadImageFromFile(file) {
    var reader = new FileReader();
    reader.onload = (function (e) {
        manager.createDocument(reader.result);
        updateSvg();

    });
    reader.readAsText(file);
}

function loadStyleFromFile(file) {
    var reader = new FileReader();
    reader.onload = (function (e) {
        manager.addStyle(reader.result);
        applyStyles();
    });
    reader.readAsText(file);
}

function applyStyles() {
    if (manager.svgDoc) {
        manager.applyStyles();
        clearSvg();
        updateSvg();
    }
}

function updateSvg(){
    var container = document.getElementById(svgContainerId);
    container.innerHTML += manager.svgString();
}

function handleFileSelect(evt) {
    evt.stopPropagation();
    evt.preventDefault();
    for (var i = 0, f; f = evt.dataTransfer.files[i]; i++) {
        loadFile(f);
    }
}

function handleDragOver(evt) {
    evt.stopPropagation();
    evt.preventDefault();
    evt.dataTransfer.dropEffect = 'copy';
}





window.onload = () => {
    console.log('Window load');
    var svgDropZone = document.getElementById('drop-zone');
    svgDropZone.addEventListener('dragover', handleDragOver, false);
    svgDropZone.addEventListener('drop', handleFileSelect, false);

    var clearBtn = document.getElementById("clearBtn");
    console.log(clearBtn);
    clearBtn.addEventListener('click', function () {
        console.log('Click Clear');
        clearSvg();
    });

    var generateBtn = document.getElementById("generateBtn");
    console.log(generateBtn);
    generateBtn.addEventListener('click', function () {
        console.log('Click generate');
        convert();
    });

}



